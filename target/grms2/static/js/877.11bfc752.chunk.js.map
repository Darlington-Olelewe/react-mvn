{"version":3,"file":"static/js/877.11bfc752.chunk.js","mappings":"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","sources":["webpack://grms/./src/component/Admin/Charts/Modal.module.css?4126","component/Admin/Charts/Charts.module.css","component/Admin/Charts/Info.jsx","component/Depot/DepotList.jsx","webpack://grms/./src/component/Depot/AppUsers.module.css?558f","webpack://grms/./src/component/Depot/Employee.module.css?f06a","webpack://grms/./src/component/Depot/Modal.module.css?3a90","component/Depot/NewDepot.jsx","component/Depot/Depot.jsx","../node_modules/js-file-download/file-download.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"active-modal\":\"Modal_active-modal__9TaNu\",\"btn-modal\":\"Modal_btn-modal__OEcSB\",\"modal\":\"Modal_modal__Jpr8j\",\"overlay\":\"Modal_overlay__LliqE\",\"modal__content\":\"Modal_modal__content__OHhp1\",\"close-modal\":\"Modal_close-modal__KcrKe\"};","// extracted by mini-css-extract-plugin\nexport default {\"charts\":\"Charts_charts__wt4y1\"};","import React, { useState } from 'react';\r\nimport modal from \"./Modal.module.css\"\r\nimport 'chartjs-adapter-date-fns';\r\nimport style from \"./Charts.module.css\"\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    TimeScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport EndPointService from '../../Service/EndPointService';\r\nimport { useEffect } from 'react';\r\n\r\nconst Info = (props) => {\r\n    ChartJS.register(\r\n        CategoryScale,\r\n        TimeScale,\r\n        LinearScale,\r\n        BarElement,\r\n        Title,\r\n        Tooltip,\r\n        Legend\r\n    );\r\n    const [chartInfo, setChartBuilder] = useState({})\r\n    const [isClosed, setIsClosed] = useState(true);\r\n\r\n    useEffect(() => {\r\n        EndPointService.fetchChart(props.route, props.id).then((response) => {\r\n            setChartBuilder(response.data)\r\n        })\r\n    }, [])\r\n\r\n    const options = {\r\n        plugins: {\r\n            title: {\r\n                display: true,\r\n                text: chartInfo.name,\r\n            },\r\n        },\r\n        responsive: true,\r\n        scales: {\r\n            x: {\r\n                stacked: true,\r\n\r\n            },\r\n            y: {\r\n                stacked: true,\r\n                type: 'time',\r\n                time: {\r\n                    unit: 'month'\r\n                },\r\n                min: '2022-07-01',\r\n                max: '2023-07-01'\r\n\r\n            },\r\n        },\r\n    }\r\n\r\n    const data = {\r\n        labels: chartInfo.label,\r\n        datasets: [\r\n\r\n            // {\r\n            //     label: 'Messaging Time ',\r\n            //     data: chartInfo.dataSet2,\r\n            //     backgroundColor: 'rgb(53, 162, 235)',\r\n            // },\r\n            \r\n            {\r\n                label: 'Expiration Time',\r\n                data: chartInfo.dataSet,\r\n                backgroundColor: 'rgb(255, 99, 132)',\r\n            },\r\n            {\r\n                label: 'Renewal Time',\r\n                data: chartInfo.dataSet1,\r\n                backgroundColor: 'rgb(75, 192, 192)',\r\n            }\r\n            \r\n            \r\n            // {\r\n            //     label: chartInfo.name,\r\n            //     data: chartInfo.objects\r\n            // }\r\n        ]\r\n    }\r\n\r\n    console.log(data)\r\n\r\n    return (<div>\r\n        {!isClosed &&\r\n            <div className={modal.modal}>\r\n                <div onClick={() => { setIsClosed(!isClosed) }} className={modal.overlay}></div>\r\n                <div >\r\n                    <div className={modal.modal__content}>\r\n                        <div className={style.charts}>\r\n                        <Bar options={options} data={data} />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        }\r\n        {isClosed &&\r\n            <div>\r\n                <button className=\"btn btn-success\" onClick={() => { setIsClosed(!isClosed) }}>Chart</button>\r\n            </div>\r\n        }\r\n\r\n    </div>)\r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default Info;","import fileDownload from \"js-file-download\";\r\nimport EndPointService from \"../Service/EndPointService\";\r\n\r\nconst DepotList = (props) => {\r\n    \r\n    const handleDownload=(id,doc)=>{\r\n        EndPointService.downloadDocument(id).then((response)=>{\r\n            fileDownload(response.data,doc)\r\n        })\r\n\r\n    }\r\n\r\n    return (<div>\r\n\r\n        <table className=\"table table-striped container\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">id</th>\r\n                    <th scope=\"col\">licenseName</th>\r\n                    <th scope=\"col\">price</th>\r\n                    <th scope=\"col\">renewal period</th>\r\n                    <th scope=\"col\">Procurment</th>\r\n                    <th scope=\"col\">Expiration</th>\r\n                    <th scope=\"col\">Download</th>\r\n                    <th scope=\"col\">Update</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    props.all.map((item) => (\r\n                        <tr key={item.id}>\r\n                            <td>{item.id}</td>\r\n                            <td>{item.licenseName}</td>\r\n                            <td>{item.price}</td>\r\n                            <td>{item.durationWindowInWeeks} weeks</td>\r\n                            <td>{item.dateOfProcurement}</td>\r\n                            <td>{item.dateOfExpiration}</td>\r\n                            <td><button className=\"btn btn-success\"  onClick={() => handleDownload(item.id,item.docName)}>Download</button></td>\r\n                            <td><button className=\"btn btn-success\">update</button></td>\r\n                            \r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>)\r\n}\r\nexport default DepotList;","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"AppUsers_main__Nwpq7\",\"controls\":\"AppUsers_controls__i3cpy\",\"pp\":\"AppUsers_pp__vFISl\",\"table\":\"AppUsers_table__dcfan\"};","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Employee_main__gvIQ4\",\"form__group\":\"Employee_form__group__mOgPo\",\"left\":\"Employee_left__mYntB\",\"btns\":\"Employee_btns__IW0rr\"};","// extracted by mini-css-extract-plugin\nexport default {\"active-modal\":\"Modal_active-modal__kwuAc\",\"btn-modal\":\"Modal_btn-modal__TFHUy\",\"modal\":\"Modal_modal__TFnwf\",\"overlay\":\"Modal_overlay__rgkVj\",\"modal__content\":\"Modal_modal__content__wtGlW\",\"close-modal\":\"Modal_close-modal__P35Pa\"};","import React, { useState, useEffect } from \"react\";\r\nimport style from \"./Employee.module.css\"\r\nimport EndPointService from \"../Service/EndPointService\";\r\nimport modal from \"./Modal.module.css\"\r\n\r\nconst NewDepot = (props) => {\r\n\r\n\r\n    const [apply, setApply] = useState({\r\n        dateOfExpiration: null,\r\n        dateOfProcurement: null,\r\n        durationWindowInWeeks: null,\r\n        licenseName: null,\r\n        price: null\r\n    });\r\n    const [licensenames, setLicenseNames] = useState([]);\r\n    const [isClosed, setIsClosed] = useState(true);\r\n    const [file, setFile] = useState();\r\n\r\n    useEffect(() => {\r\n        EndPointService.fetchLicenseNames().then((resp) => {\r\n            const newdata = { id: 0, licenseName: \"---select---\" }\r\n            const data = resp.data;\r\n            data.unshift(newdata);\r\n            console.log(data)\r\n            setLicenseNames(data)\r\n        })\r\n    }, []);\r\n\r\n    const fileHandler = (e) => {\r\n        setFile(e.target.files[0]);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setApply((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                [name]: value,\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        EndPointService.createDepotLicense(apply).then((response) => {\r\n            setIsClosed(true);\r\n            if (response.status === 200) {\r\n                const formData = new FormData();\r\n                formData.append(\"file\", file)\r\n                EndPointService.attachDocument(formData, response.data.id).then((response) => {\r\n                    if (response.status == 200) {\r\n                        setIsClosed(true)\r\n                    } else {\r\n                        props.onSendMsg(\"unsuccessful\")\r\n                    }\r\n                })\r\n\r\n                props.onSendMsg(\"success\")\r\n            } else {\r\n                props.onSendMsg(\"unsuccessful\")\r\n            }\r\n        }).catch((error) => {\r\n            setIsClosed(true)\r\n            props.onSendMsg(\"unsuccessful\")\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!isClosed &&\r\n                <div className={modal.modal}>\r\n                    <div onClick={() => { setIsClosed(!isClosed) }} className={modal.overlay}></div>\r\n\r\n                    <form onSubmit={handleSubmit} className={modal.modal__content}>\r\n                        <div >\r\n\r\n\r\n\r\n\r\n                            <div className={style.form__group}>\r\n\r\n                                <div className={style.left}>\r\n                                    <label>License Name</label>\r\n                                </div>\r\n\r\n                                <div className={style.right}>\r\n                                    <select name=\"licenseName\"\r\n                                        onChange={handleChange}\r\n                                        required\r\n                                        type='text'>\r\n                                        {licensenames.map((item, index) => (\r\n                                            <option key={index} value={item.licenseName}>{item.licenseName}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className={style.form__group}>\r\n                                <div className={style.left}>\r\n                                    <label>Procurement Date</label>\r\n                                </div>\r\n\r\n                                <div className={style.right}>\r\n                                    <input type='date'\r\n                                        required\r\n                                        name=\"dateOfProcurement\"\r\n                                        onChange={handleChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className={style.form__group}>\r\n                                <div className={style.left}>\r\n                                    <label>Expiration Date</label>\r\n                                </div>\r\n\r\n                                <div className={style.right}>\r\n                                    <input type='date'\r\n                                        required\r\n                                        name=\"dateOfExpiration\"\r\n                                        onChange={handleChange} />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className={style.form__group}>\r\n\r\n                                <div className={style.left}>\r\n                                    <label>Price</label>\r\n                                </div>\r\n\r\n                                <div className={style.right}>\r\n                                    <input name=\"price\"\r\n                                        onChange={handleChange}\r\n                                        required\r\n                                        type=\"number\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={style.form__group}>\r\n\r\n                                <div className={style.left}>\r\n                                    <label>Renewal Period</label>\r\n                                </div>\r\n\r\n                                <div className={style.right}>\r\n                                    <input name=\"durationWindowInWeeks\"\r\n                                        onChange={handleChange}\r\n                                        required\r\n                                        type=\"number\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className={style.form__group}>\r\n                                <div className={style.left}>\r\n                                    <label>License Document</label>\r\n                                </div>\r\n                                <div className={style.right}>\r\n                                    <input type=\"file\" name=\"file\" required onChange={fileHandler} accept=\".doc, .docx, .pdf\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className={style.form__group}>\r\n                            <div >\r\n                                <button className=\"btn btn-danger\" onClick={() => { setIsClosed(!isClosed) }}>Close </button>\r\n                                <button className=\"btn btn-success\"\r\n                                    type=\"submit\">Apply</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n            }\r\n            {isClosed &&\r\n                <div>\r\n                    <button className=\"btn btn-success\" onClick={() => { setIsClosed(!isClosed) }}>New License </button>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default NewDepot;\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport EndPointService from \"../Service/EndPointService\";\r\nimport DepotList from \"./DepotList\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AiFillCaretLeft } from \"react-icons/ai\";\r\nimport { AiFillCaretRight } from \"react-icons/ai\";\r\nimport style from \"./AppUsers.module.css\"\r\nimport NewDepot from \"./NewDepot\";\r\nimport Info from \"../Admin/Charts/Info\";\r\n\r\nconst Depot = () => {\r\n    const currentUser = useSelector(state => state.user);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [details, setDetails] = useState([]);\r\n    const Keys = [\"dateOfExpiration\", \"dateOfProcurement\", \"licenseName\", \"price\"];\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postPerPgage, setPostPerPage] = useState(10);\r\n    const [message, setMessage] = useState(null);\r\n\r\n    useEffect(() => {\r\n        EndPointService.fetchDepotLicenses(currentUser.depotId).then((response) => {\r\n            setDetails(response.data)\r\n            console.log(response.data)\r\n        })\r\n    }, [message])\r\n\r\n    const search = (any) => {\r\n        return any.filter((item) => Keys.some(key => item[key].toLowerCase().includes(query)));\r\n    };\r\n\r\n    const getMessage = (msg) => {\r\n        setMessage(msg)\r\n    }\r\n\r\n    const indexOfLastPost = currentPage * postPerPgage;\r\n    const indexOfFirstPost = indexOfLastPost - postPerPgage;\r\n    const filtered = search(details);\r\n    const currentPost = filtered.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n\r\n    return (\r\n        <div className={style.main}>\r\n\r\n            <div className={style.controls}>\r\n                <div className={style.controls__left}>\r\n                    <input\r\n                        className={style.pp}\r\n                        type=\"number\"\r\n                        value={postPerPgage}\r\n                        onChange={(e) => setPostPerPage(e.target.value)}\r\n                    />\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"search....\"\r\n                        onChange={(e) => setQuery(e.target.value)}\r\n                    />\r\n                </div>\r\n                {!message &&\r\n                    <div className=\"alert alert-success\">{message}</div>\r\n                }\r\n\r\n                <NewDepot onSendMsg={getMessage} />\r\n                <Info route={\"depot\"} id={1}/>\r\n                <div className={style.controls__right}>\r\n                    <AiFillCaretLeft onClick={() => {\r\n                        if (currentPage !== 1) {\r\n                            setCurrentPage(currentPage - 1);\r\n                        }\r\n                    }} />\r\n                    <span>{currentPage + \" OF \" + Math.ceil(filtered.length / postPerPgage)}</span>\r\n                    <AiFillCaretRight\r\n                        onClick={() => {\r\n                            if (currentPage !== Math.ceil(filtered.length / postPerPgage)) {\r\n                                setCurrentPage(currentPage + 1)\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n            <div className={style.table}>\r\n            <DepotList all={currentPost} onGetMsg={getMessage}/>\r\n        </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Depot;","module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // Fixes \"webkit blob resource error 1\"\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200)\n    }\n}\n"],"names":["props","ChartJS","CategoryScale","TimeScale","LinearScale","BarElement","Title","Tooltip","Legend","useState","chartInfo","setChartBuilder","isClosed","setIsClosed","useEffect","EndPointService","route","id","then","response","data","options","plugins","title","display","text","name","responsive","scales","x","stacked","y","type","time","unit","min","max","labels","label","datasets","dataSet","backgroundColor","dataSet1","console","log","className","modal","onClick","style","scope","all","map","item","licenseName","price","durationWindowInWeeks","dateOfProcurement","dateOfExpiration","doc","docName","fileDownload","apply","setApply","licensenames","setLicenseNames","file","setFile","resp","unshift","handleChange","e","target","value","prevState","onSubmit","preventDefault","status","formData","FormData","append","onSendMsg","catch","error","onChange","required","index","files","accept","currentUser","useSelector","state","user","query","setQuery","details","setDetails","Keys","currentPage","setCurrentPage","postPerPgage","setPostPerPage","message","setMessage","depotId","getMessage","msg","indexOfLastPost","indexOfFirstPost","filtered","filter","some","key","toLowerCase","includes","currentPost","slice","placeholder","Info","Math","ceil","length","onGetMsg","module","exports","filename","mime","bom","blob","Blob","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL"],"sourceRoot":""}